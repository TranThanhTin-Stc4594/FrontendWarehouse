{"version":3,"sources":["App.js","index.js"],"names":["backendUrl","App","keyword","setKeyword","useState","parameter","setParameter","username","setUsername","searchResults","setSearchResults","suggestions","setSuggestions","selectedProduct","setSelectedProduct","quantity","setQuantity","handleSearch","async","url","concat","console","log","response","fetch","ok","data","json","filteredData","error","statusText","alert","handleKeyPress","e","key","_jsxs","className","children","_jsx","type","value","onChange","target","newKeyword","fetchSuggestions","onKeyPress","length","map","suggestion","index","onClick","handleSuggestionClick","result","ID","TenSanPham","MaSanPham","ThongSoSanPham","ViTri","SoLuongSanPham","placeholder","method","headers","body","JSON","stringify","maSanPham","parseInt","errorResponse","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.381e4aec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n//const backendUrl = 'https://back-end-warehouse.vercel.app'\n//const backendUrl =  'http://localhost:3333';\nconst backendUrl='http://192.168.50.58:3333';\nfunction App() {\n  const [keyword, setKeyword] = useState('');\n  const [parameter, setParameter] = useState('');\n  const [username, setUsername] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [quantity, setQuantity] = useState('');\n\n  const handleSearch = async () => {\n    setSearchResults([]); // Clear previous search results\n    const url = `${backendUrl}/api/search?keyword=${keyword}&parameter=${parameter}`;\n    console.log(`Fetching from: ${url}`);\n    const response = await fetch(url);\n    if (response.ok) {\n      const data = await response.json();\n      setSearchResults(data.filteredData || []);\n      console.log('Search results:', data.filteredData);\n    } else {\n      console.error('Error fetching search results:', response.statusText);\n      alert('Không thể tìm kiếm. Vui lòng thử lại sau.');\n    }\n  };\n  \n  const handleUpdateQuantity = async () => {\n    if (!selectedProduct || !quantity) {\n        alert('Please select a product and enter a quantity.');\n        return;\n    }\n\n    try {\n        const response = await fetch(`${backendUrl}/api/update-quantity`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ maSanPham: selectedProduct, quantity: parseInt(quantity, 10) }),\n        });\n\n        if (response.ok) {\n            alert('Quantity updated successfully.');\n            handleSearch();  // Re-fetch the search results to reflect the updated quantity\n        } else {\n            const errorResponse = await response.json();\n            console.error('Error updating quantity:', errorResponse);\n            alert(`Không thể cập nhật số lượng: ${errorResponse.error}`);\n        }\n    } catch (error) {\n        console.error('Error updating quantity:', error);\n        alert('Không thể cập nhật số lượng. Vui lòng thử lại sau.');\n    }\n};\n\n  const fetchSuggestions = async (keyword) => {\n    const url = `${backendUrl}/api/suggestions?keyword=${keyword}`;\n    const response = await fetch(url);\n    if (response.ok) {\n      const data = await response.json();\n      setSuggestions(data.suggestions || []);\n    } else {\n      console.error('Error fetching suggestions:', response.statusText);\n    }\n  };\n\n  const handleKeywordChange = (e) => {\n    const newKeyword = e.target.value;\n    setKeyword(newKeyword);\n    fetchSuggestions(newKeyword);\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setKeyword(suggestion); // Đặt từ khóa thành giá trị gợi ý\n    setSuggestions([]); // Ẩn các gợi ý sau khi chọn\n    handleSearch(); // Thực hiện tìm kiếm ngay lập tức\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Quản lý Kho</h1>\n      <div>\n        <label>\n          Username:\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <label>\n          Keyword:\n          <input type=\"text\" value={keyword} onChange={handleKeywordChange} onKeyPress={handleKeyPress} />\n          {suggestions.length > 0 && (\n            <ul className=\"suggestions\">\n              {suggestions.map((suggestion, index) => (\n                <li key={index} onClick={() => handleSuggestionClick(suggestion)}>\n                  {suggestion}\n                </li>\n              ))}\n            </ul>\n          )}\n        </label>\n        <label>\n          Parameter:\n          <input type=\"text\" value={parameter} onChange={(e) => setParameter(e.target.value)} onKeyPress={handleKeyPress} />\n        </label>\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <div className=\"results\">\n        <h2>Kết quả Tìm kiếm</h2>\n        <ul>\n  {searchResults.length > 0 ? (\n    searchResults.map(result => (\n      <li\n        key={result.ID}  // Sử dụng ID làm key\n        className={selectedProduct === result.ID ? 'selected' : ''}  // Sử dụng ID để so sánh\n        onClick={() => setSelectedProduct(result.ID)}  // Sử dụng ID để đặt selectedProduct\n      >\n        <p><strong>Tên sản phẩm:</strong> {result.TenSanPham}</p>\n        <p><strong>Mã sản phẩm:</strong> {result.MaSanPham}</p>\n        <p><strong>Thông số sản phẩm:</strong> {result.ThongSoSanPham}</p>\n        <p><strong>Vị trí:</strong> {result.ViTri}</p>\n        <p><strong>Số lượng sản phẩm:</strong> {result.SoLuongSanPham}</p>\n      </li>\n    ))\n  ) : (\n    <p>No results found.</p>\n  )}\n</ul>\n      </div>\n      {selectedProduct && (\n        <div className=\"update-quantity\">\n          <h2>Update Quantity for {selectedProduct}</h2>\n          <input\n            type=\"number\"\n            placeholder=\"Enter quantity\"\n            value={quantity}\n            onChange={(e) => setQuantity(e.target.value)}\n          />\n          <button onClick={handleUpdateQuantity}>Update Quantity</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}